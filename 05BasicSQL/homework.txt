All exercises here concern the music database, which is available at http://tahaghoghi.com/LearningMySQL/Downloads/Files/Data/SQL_files_with_foreign_key_references/music.sql

I strongly recommend theta join style as per http://code.openark.org/blog/mysql/mysql-joins-on-vs-using-vs-theta-style - the nutshell is that ANSI style is like this:

SELECT ... FROM table1 INNER JOIN table2 WHERE field1=field2 AND filter=something;

Theta style is like this:
SELECT ... FROM table1 INNER JOIN table2 ON (field1=field2) WHERE filter=something;

The reason for this is that when you have many tables joined it's easier to see the join clause in ON or USING with theta style. 
If you join many tables and use ANSI style, where everything is in the WHERE clause, it's possible to forget some of the join clauses 
in the WHERE. If you put the join clauses in the JOIN part, it's way more readable.

1) Use one or more SELECT statements to find out how many tracks are on New Order's Brotherhood album.
	10 Tracks:
		mysql> select * from artist where artist_name = 'New Order';
		+-----------+-------------+
		| artist_id | artist_name |
		+-----------+-------------+
		|         1 | New Order   |
		+-----------+-------------+
		1 row in set (0.00 sec)

		mysql> select album.album_name, track.track_name
			-> from album inner join track on (album.album_id = track.album_id)
			-> where album.artist_id = 1
			-> and album.album_name = 'Brotherhood';
		+-------------+-----------------------+
		| album_name  | track_name            |
		+-------------+-----------------------+
		| Brotherhood | State of the Nation   |
		| Brotherhood | Every Little Counts   |
		| Brotherhood | Angel Dust            |
		| Brotherhood | All Day Long          |
		| Brotherhood | Bizarre Love Triangle |
		| Brotherhood | Way of Life           |
		| Brotherhood | Broken Promise        |
		| Brotherhood | As It Is When It Was  |
		| Brotherhood | Weirdo                |
		| Brotherhood | Paradise              |
		+-------------+-----------------------+
		10 rows in set (0.00 sec)

2) Using a join, list the albums that we own by the band New Order
		mysql> select artist.artist_name, album.album_name
			-> from artist inner join album on (artist.artist_id = album.artist_id)
			-> where artist_name = 'New Order';
		+-------------+------------------------------------------+
		| artist_name | album_name                               |
		+-------------+------------------------------------------+
		| New Order   | Retro - John McCready FAN                |
		| New Order   | Substance (Disc 2)                       |
		| New Order   | Retro - Miranda Sawyer POP               |
		| New Order   | Retro - New Order / Bobby Gillespie LIVE |
		| New Order   | Power, Corruption & Lies                 |
		| New Order   | Substance 1987 (Disc 1)                  |
		| New Order   | Brotherhood                              |
		+-------------+------------------------------------------+
		7 rows in set (0.00 sec)

3) With INSERT statements, add the artist Leftfield to the database. For this new artist, add the album "Leftism" that has
the following tracks:
a. Release the Pressure (Time: 7.39)
b. Afro-Melt (Time: 7.33)
c. Melt (Time: 5.21)
d. Song of Life (Time: 6.55)
e. Original (Time: 6.00)
f. Black Flute (Time: 3.46)
g. Space Shanty (Time: 7.15)
h. Inspection Check One (Time: 6.30)
i. Storm 3000 (Time: 5.44)
j. Open Up (Time: 6.52)
k. 21st Century Poem (Time: 5.42)
l. Bonus Track (Time: 1.22)

The answer to this question should be the INSERT statement(s).
		mysql> select max(artist_id) from artist;
		+----------------+
		| max(artist_id) |
		+----------------+
		|              6 |
		+----------------+
		1 row in set (0.00 sec)

		mysql> insert into artist (artist_id, artist_name) values (7,"Leftfield");
		Query OK, 1 row affected (0.02 sec)

		mysql> insert into album (artist_id, album_id, album_name) values (7,1,"Leftism");
		Query OK, 1 row affected (0.03 sec)

		mysql> insert into track (artist_id, album_id, track_id, track_name, time)
			-> values (7,1,1,"Release the Pressure","7.39"),
			-> (7,1,2,"Afro-Melt","7.33"),
			-> (7,1,3,"Melt","5.21"),
			-> (7,1,4,"Song of Life","6.55"),
			-> (7,1,5,"Original","6.00"),
			-> (7,1,6,"Black Flute","3.46"),
			-> (7,1,7,"Space Shanty","7.15"),
			-> (7,1,8,"Inspection Check One","6.30"),
			-> (7,1,9,"Storm 3000","5.44"),
			-> (7,1,10,"Open Up","6.52"),
			-> (7,1,11,"21st Century Poem","5.42"),
			-> (7,1,12,"Bonus Track","1.22");
		Query OK, 12 rows affected (0.03 sec)
		Records: 12  Duplicates: 0  Warnings: 0

4) How long in minutes is the Leftism album you added in Question 3? Hint: use the
SUM() aggregate function.
	67.99 Minutes
		mysql> select sum(time) from track
			-> where artist_id = 7 and album_id = 1;
		+-----------+
		| sum(time) |
		+-----------+
		|     67.99 |
		+-----------+
		1 row in set (0.02 sec)

5) Change the time for the Original track on the Leftism album to 6.22.
		mysql> select * from track
			-> where artist_id = 7 and album_id = 1 and track_name = "Original";
		+----------+------------+-----------+----------+------+
		| track_id | track_name | artist_id | album_id | time |
		+----------+------------+-----------+----------+------+
		|        5 | Original   |         7 |        1 | 6.00 |
		+----------+------------+-----------+----------+------+
		1 row in set (0.00 sec)

		mysql> update track set time = "6.22"
			-> where artist_id = 7 and album_id = 1 and track_name = "Original";
		Query OK, 1 row affected (0.10 sec)
		Rows matched: 1  Changed: 1  Warnings: 0

		mysql> select * from track
			-> where artist_id = 7 and album_id = 1 and track_name = "Original";
		+----------+------------+-----------+----------+------+
		| track_id | track_name | artist_id | album_id | time |
		+----------+------------+-----------+----------+------+
		|        5 | Original   |         7 |        1 | 6.22 |
		+----------+------------+-----------+----------+------+
		1 row in set (0.00 sec)
		
6. Remove the Bonus track from the Leftism album
		mysql> select * from track where artist_id = 7 and album_id = 1 and track_name =
		 "Bonus Track";
		+----------+-------------+-----------+----------+------+
		| track_id | track_name  | artist_id | album_id | time |
		+----------+-------------+-----------+----------+------+
		|       12 | Bonus Track |         7 |        1 | 1.22 |
		+----------+-------------+-----------+----------+------+
		1 row in set (0.00 sec)

		mysql> delete from track where artist_id = 7 and album_id = 1 and track_name = "
		Bonus Track";
		Query OK, 1 row affected (0.03 sec)

		mysql> select * from track where artist_id = 7 and album_id = 1 and track_name =
		 "Bonus Track";
		Empty set (0.00 sec)